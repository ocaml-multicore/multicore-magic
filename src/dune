(library
 (name Multicore_magic)
 (public_name multicore-magic))

;;

(rule
 (targets mix.ml)
 (deps mix.64.ml)
 (enabled_if %{arch_sixtyfour})
 (action
  (progn
   (copy mix.64.ml mix.ml))))

(rule
 (targets mix.ml)
 (deps mix.32.ml)
 (enabled_if
  (not %{arch_sixtyfour}))
 (action
  (progn
   (copy mix.32.ml mix.ml))))

;;

(rule
 (targets domain_id.ml)
 (deps domain_id.ocaml4.ml)
 (enabled_if
  (< %{ocaml_version} 5.0.0))
 (action
  (progn
   (copy domain_id.ocaml4.ml domain_id.ml))))

(rule
 (targets domain_id.ml)
 (deps domain_id.noalloc.ml)
 (enabled_if
  (and
   (>= %{ocaml_version} 5.0.0)
   (< %{ocaml_version} 5.2.0)))
 (action
  (progn
   (copy domain_id.noalloc.ml domain_id.ml))))

(rule
 (targets domain_id.ml)
 (deps domain_id.stdlib.ml)
 (enabled_if
  (>= %{ocaml_version} 5.2.0))
 (action
  (progn
   (copy domain_id.stdlib.ml domain_id.ml))))

;;

(rule
 (targets cache.ml)
 (deps cache.1.ml)
 (enabled_if
  (< %{ocaml_version} 5.0.0))
 (action
  (progn
   (copy cache.1.ml cache.ml))))

(rule
 (targets cache.ml)
 (deps cache.8.ml)
 (enabled_if
  (and
   (>= %{ocaml_version} 5.0.0)
   (not
    (or
     (= %{architecture} arm64)
     (= %{architecture} power)
     (= %{architecture} s390x)))))
 (action
  (progn
   (copy cache.8.ml cache.ml))))

(rule
 (targets cache.ml)
 (deps cache.16.ml)
 (enabled_if
  (and
   (>= %{ocaml_version} 5.0.0)
   (or
    (= %{architecture} arm64)
    (= %{architecture} power))))
 (action
  (progn
   (copy cache.16.ml cache.ml))))

(rule
 (targets cache.ml)
 (deps cache.32.ml)
 (enabled_if
  (and
   (>= %{ocaml_version} 5.0.0)
   (= %{architecture} s390x)))
 (action
  (progn
   (copy cache.32.ml cache.ml))))
